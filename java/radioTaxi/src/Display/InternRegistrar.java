package Display;

import BLL.*;
import DAL.RadioTaxiDAL;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author JoseOnate
 */
public class InternRegistrar extends javax.swing.JInternalFrame {

    /**
     * Creates new form internRegistra
     *
     * @throws java.sql.SQLException
     */
    public InternRegistrar() throws SQLException {
        initComponents();
        DateFormat dateFormat = new SimpleDateFormat("HH:mm");
        Date date = new Date();
        RadioTaxiDAL rd = new RadioTaxiDAL();
        this.txtHoraLlegada.setText(dateFormat.format(date));
        for (Carrera item : rd.listTrips()) {
            this.cmbIdCarrera.addItem(item.getId_carrera());
        }
        for (String patente : rd.enCarrera()) {
            this.cmbOnTrip.addItem(patente);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtHoraLlegada = new javax.swing.JTextField();
        cmbIdCarrera = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        cmbOnTrip = new javax.swing.JComboBox();

        jLabel1.setText("Dia llegada : ");

        jLabel2.setText("Patente : ");

        jLabel3.setText("Hora llegada : ");

        cmbIdCarrera.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbIdCarreraItemStateChanged(evt);
            }
        });

        jLabel4.setText("Id Carrera : ");

        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        cmbOnTrip.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOnTripItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtHoraLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbOnTrip, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbIdCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbIdCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cmbOnTrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtHoraLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        RadioTaxiDAL rd = new RadioTaxiDAL();
        Calendar c = Calendar.getInstance();
        c = this.dateChooserCombo1.getSelectedDate();
        String fecha = String.valueOf(c.get(Calendar.YEAR)) + "-" + String.valueOf(c.get(Calendar.MONTH) + 1) + "-" + String.valueOf(c.get(Calendar.DATE));
        Carrera trip = new Carrera();
        trip.setFecha_llegada(fecha);
        trip.setHora_llegada(this.txtHoraLlegada.getText());
        int cmbId = 0;
        try {
            cmbId = Integer.parseInt(this.cmbIdCarrera.getSelectedItem().toString());
        } catch (NumberFormatException e) {
            System.out.println(e.getMessage());
        }
        trip.setId_carrera(cmbId);
        trip.setPatente_taxi(this.cmbOnTrip.getSelectedItem().toString());
        try {
            if (rd.updateCarrera(trip)) {
                System.out.println("CARRERA actualizada");
                Taxi tx = new Taxi();
                tx.setEstado('D');
                tx.setPatente(this.cmbOnTrip.getSelectedItem().toString());
                if (rd.updateTaxi(tx)) {
                    JOptionPane.showMessageDialog(this, "Se actualizo TAXI");
                    this.cmbOnTrip.removeAllItems();
                    for (String patente : rd.enCarrera()) {
                        this.cmbOnTrip.addItem(patente);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No se actualizo TAXI");
                }

            } else {
                System.out.println("No se actualizo CARRERA");
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void cmbIdCarreraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbIdCarreraItemStateChanged

    }//GEN-LAST:event_cmbIdCarreraItemStateChanged

    private void cmbOnTripItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOnTripItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbOnTripItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JComboBox cmbIdCarrera;
    private javax.swing.JComboBox cmbOnTrip;
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtHoraLlegada;
    // End of variables declaration//GEN-END:variables
}
